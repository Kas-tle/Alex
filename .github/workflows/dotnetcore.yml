name: .NET Core

on:
  push:
    branches: master

jobs:
  package:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
#         - name: Linux x64
#           os: ubuntu-latest
#           rid: linux-x64
#           artifact: 'Linux (x64)'
#           platform: 'Linux-x64'
          
#         - name: Linux Arm64
#           os: ubuntu-latest
#           rid: linux-arm64
#           artifact: 'Linux (ARM64)'
#           platform: 'Linux-arm64'
          
#         - name: MacOS x64
#           os: macos-latest
#           rid: osx-x64
#           artifact: 'MacOS (x64)'
#           platform: 'MacOS-x64'
          
#         - name: MacOS Arm64
#           os: macos-latest
#           rid: osx.12-arm64
#           artifact: 'MacOS Monterey (ARM64)'
#           platform: 'MacOS-arm64'
          
        - name: Windows x64
          os: windows-latest
          rid: win-x64
          artifact: 'Windows (x64)'
          platform: 'Windows-x64'
        
#         - name: Windows Arm64
#           os: windows-latest
#           rid: win-arm64
#           artifact: 'Windows (ARM64)'
#           platform: 'Windows-arm64'

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.8.0
      with:
        dotnet-version: 6.0.x
    
    - name: Get short SHA
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
    - name: Build
      run: dotnet publish --configuration Release -o "build" --version-suffix ${{steps.vars.outputs.sha_short}} -r ${{matrix.rid}} /p:PublishReadyToRun=false /p:TieredCompilation=false --self-contained
      working-directory: src/Alex

    #- name: Set executable permissions
    #  working-directory: src/Alex/build
    #  run: chmod +x Alex
        
    - name: Zip Build
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        path: "src/Alex/build"
        exclusions: '*.pdb'
        filename: ./release.zip
        
    - name: Create Release
      uses: tix-factory/release-manager@v1
      with:
        github_token: ${{ secrets.github_token }}
        mode: uploadReleaseAsset
        filePath: ./release.zip
        assetName: ${{ format('{0}.zip', matrix.platform) }}
        tag: ${{ format('release-{0}', github.run_number) }}
        
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: ${{matrix.artifact}}
        # Directory containing files to upload
        path: ./release.zip
